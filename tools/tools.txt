TOOLS:

```json
[
  {
    "name": "performance_analyzer",
    "description": "Analyzes an athlete's mental performance and provides insights",
    "parameters": {
      "type": "object",
      "properties": {
        "athlete_id": {
          "type": "string",
          "description": "The unique identifier of the athlete"
        },
        "performance_data": {
          "type": "object",
          "properties": {
            "stress_level": {
              "type": "number",
              "description": "The athlete's perceived stress on a scale"
            },
            "focus_duration": {
              "type": "integer",
              "description": "The duration of focused concentration in minutes"
            },
            "recovery_time": {
              "type": "integer",
              "description": "The time taken to recover between sessions in minutes"
            }
          },
          "required": [
            "stress_level",
            "focus_duration",
            "recovery_time"
          ]
        }
      },
      "required": [
        "athlete_id",
        "performance_data"
      ]
    }
  },
  {
    "name": "goal_setting",
    "description": "Assists athletes in setting and tracking sports psychology goals",
    "parameters": {
      "type": "object",
      "properties": {
        "athlete_id": {
          "type": "string",
          "description": "The unique identifier of the athlete"
        },
        "goals": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of the goal"
              },
              "description": {
                "type": "string",
                "description": "A brief description of the goal"
              },
              "target_date": {
                "type": "string",
                "format": "date",
                "description": "The date to achieve the goal"
              },
              "progress": {
                "type": "number",
                "description": "The current progress towards the goal (0-100)"
              }
            },
            "required": [
              "name",
              "description",
              "target_date"
            ]
          }
        }
      },
      "required": [
        "athlete_id",
        "goals"
      ]
    }
  },
  {
    "name": "coping_strategies",
    "description": "Suggests coping mechanisms for pre-competition anxiety",
    "parameters": {
      "type": "object",
      "properties": {
        "athlete_id": {
          "type": "string",
          "description": "The unique identifier of the athlete"
        },
        "anxiety_level": {
          "type": "number",
          "description": "The athlete's anxiety level on a scale"
        },
        "previous_strategies": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Previously used coping strategies"
          },
          "description": "A list of strategies the athlete has tried"
        }
      },
      "required": [
        "athlete_id",
        "anxiety_level"
      ]
    }
  },
  {
    "name": "visualizacion_session",
    "description": "Guides an athlete through a visualization session for improved performance",
    "parameters": {
      "type": "object",
      "properties": {
        "athlete_id": {
          "type": "string",
          "description": "The unique identifier of the athlete"
        },
        "event_description": {
          "type": "string",
          "description": "A description of the event or scenario to visualize"
        },
        "duration": {
          "type": "integer",
          "description": "The duration of the visualization session in minutes"
        }
      },
      "required": [
        "athlete_id",
        "event_description",
        "duration"
      ]
    }
  }
]
```

Tasks should be generated only in english language.

Your task is to generate complex task(s) that asks the user to generate a response based exclusively on the information of one or more of the generated tools blocks.

The task(s) should be questions or instructions. The task(s) should not specifically indicate that the user should reference the tools, just state the task(s).

Do not include phrasing such as "Using the first text block", or "using the blog post", etc., just assume the target audience will know where to find the answer based on the question/instruction.

The task(s) must not start with "Describe the ...", "Explain how ...", etc., and should ask for specific information, and must be completely and accurately answerable using only the random text.

Ask TRICKY questions, so that the user really needs to think before he is able to answer. 

You also need to generate question another set of questions, which might CONFUSE the agent and force him to hallucinate. 

When generating questions, don't mention the word "TOOLS" in the questions.

Respond in the following format.
List of 5 TRICKY tasks generated:
TSK 1. [task 1 in english language]
TSK 2. [task 2 in english language]

List of 5 tasks generated which might CONFUSE the agent.
TSK 1. [task 1 in english language]
TSK 2. [task 2 in english language]

List of 5 tasks generated which don't require tools.
TSK 1. [task 1 in english language]
TSK 2. [task 2 in english language]