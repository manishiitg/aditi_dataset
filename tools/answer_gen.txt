TOOLS
```json
[
  {
    "name": "analyze_device_data",
    "description": "Analyze IoT device data for patterns and insights",
    "parameters": {
      "type": "object",
      "properties": {
        "dataset_name": {
          "type": "string",
          "description": "The name of the IoT data dataset"
        },
        "query_expression": {
          "type": "string",
          "description": "A SQL-like query to filter and aggregate data"
        },
        "time_window": {
          "type": "string",
          "description": "The time window for analysis (e.g., 'PT1H', 'P1D')"
        },
        "variables": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of variables to analyze"
        }
      },
      "required": [
        "dataset_name",
        "query_expression"
      ]
    }
  },
  {
    "name": "detect_anomalies",
    "description": "Detect anomalies in IoT sensor data",
    "parameters": {
      "type": "object",
      "properties": {
        "data_channel": {
          "type": "string",
          "description": "The IoT data channel to analyze"
        },
        "threshold": {
          "type": "number",
          "description": "The threshold for anomaly detection"
        },
        "time_period": {
          "type": "string",
          "description": "The time period for analysis (e.g., 'PT1H', 'P1D')"
        },
        "reference_data_set": {
          "type": "string",
          "description": "Optional reference dataset for context"
        }
      },
      "required": [
        "data_channel",
        "threshold",
        "time_period"
      ]
    }
  },
  {
    "name": "generate_dashboard",
    "description": "Create a dashboard visualizing IoT analytics",
    "parameters": {
      "type": "object",
      "properties": {
        "dashboard_name": {
          "type": "string",
          "description": "The name of the dashboard"
        },
        "widgets": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Widget type (e.g., 'lineChart', 'pieChart')"
              },
              "data_source": {
                "type": "string",
                "description": "The data source for the widget"
              },
              "time_range": {
                "type": "string",
                "description": "The time range to display (e.g., 'PT1H', 'P1D')"
              }
            },
            "required": [
              "type",
              "data_source"
            ]
          }
        }
      },
      "required": [
        "dashboard_name",
        "widgets"
      ]
    }
  },
  {
    "name": "predict_device_behavior",
    "description": "Predict future behavior of IoT devices",
    "parameters": {
      "type": "object",
      "properties": {
        "device_id": {
          "type": "string",
          "description": "The ID of the IoT device"
        },
        "model_name": {
          "type": "string",
          "description": "The name of the预测模型"
        },
        "time_series_window": {
          "type": "string",
          "description": "The time window for input data (e.g., 'PT1H', 'P1D')"
        },
        "prediction_interval": {
          "type": "integer",
          "description": "Number of time steps to predict"
        }
      },
      "required": [
        "device_id",
        "model_name",
        "time_series_window"
      ]
    }
  },
]
```

You are given a TOOLS defination.
You need to generate a relevent output based on users question using TOOLS in json format.

Rules For Using TOOLS:
    You ONLY have access to TOOLS listed above, and should NEVER make up tools that are not listed here.
    If a value for tool parameter is missing, don't make assumptions about the value always ask the user.
    You can only use a tool, when you have all parameter values. If you don't have values for all parameters, return "no_tools"
    Always ask user about missing parameter values.
    If there is no tool which fits the, reply with "no_tools"
    
    If you are selecting a TOOL, reply in the exact format
    {'arguments': <args-dict>, 'name': <function-name>}

If executing  a TOOL:
Make sure you have all required parameter values as per the parameter types.
Do not make up parameter values, make sure you have exact value as per the required parameter type.

Reply in format below:

Thought in English: think step by step about what to do in detail.
Action: the action to take if you have all tool parameter values, only one name of [{tool_names}], in the exact format {'arguments': <args-dict>, 'name': <function-name>}
Should Execute Action: do we have all parameter values to execute action reply only yes or no. If yes, i.e executing a tool reply to user should only contain a message asking user to wait.
Reply to User: a short natural language based message to be sent to the user

Question: Detect anomalies in the 'humidity' data channel of device 'DHU-456' over the past day with a threshold of 10%. Include a reference dataset 'normal_humidity_profiles' for context.


List of 5 tasks generated with tools and parameters:
TSK 1. Analyze the dataset named "Factory_123" to find average temperature readings over the last 24 hours for devices in the 'temperature' channel. Use a query to filter out readings below 20°C.
TSK 2. Detect anomalies in the 'humidity' data channel of device 'DHU-456' over the past day with a threshold of 10%. Include a reference dataset 'normal_humidity_profiles' for context.
TSK 3. Create a dashboard named 'EnergyUsage' with a line chart widget showing power consumption data from the 'power' data source over the last hour.
TSK 4. Predict the behavior of device 'AC-345' for the next 24 hours using the 'temperature_prediction_model' and a time series window of the last day.
TSK 5. Generate a dashboard named 'DevicePerformance' with a pie chart widget displaying the number of normal and anomalous readings from the 'sensor_data' source over the past week.

List of 5 tasks generated with parameters missing:
TSK 1. Run anomaly detection on a specific data channel, considering a given time period and a threshold, to identify unusual activity.
TSK 2. Create a dashboard visualizing IoT analytics, but without specifying the widgets or their data sources.
TSK 3. Analyze IoT device data for patterns, but only provide the dataset name and time window, not the query expression or variables.
TSK 4. Predict future behavior of an IoT device using a model, but don't mention the device ID, time series window, or prediction interval.
TSK 5. Generate a dashboard with a widget, but leave out the dashboard name, widget type, and data source.

List of 5 tasks generated which don't require tools:
TSK 1. Summarize the main factors influencing the efficiency of IoT devices in industrial settings.
TSK 2. Explain the difference between supervised and unsupervised learning in the context of IoT data analysis.
TSK 3. Describe a strategy for securing communication between IoT devices and a central server.
TSK 4. Discuss the importance of data preprocessing in extracting meaningful insights from IoT sensor data.
TSK 5. Outline the steps involved in creating a predictive maintenance system for IoT-enabled machinery.